{"version":3,"sources":["license.js","popover.js","tooltip.js","copy-type.js","forms.js","navbar-sticky.js","highlight.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"quick-website.js","sourcesContent":["/*\r\n\r\nTheme: Quick â€“ Website UI Kit (FREE)\r\nVersion: 1.1.0\r\nProduct Page: https://webpixels.io/themes/quick-website-ui-kit\r\nLicense: MIT\r\nAuthor: Webpixels\r\nAuthor URI: https://webpixels.io\r\n\r\n---\r\n\r\nCopyright 2020 Webpixels\r\n\r\n*/\r\n","//\r\n// Popover\r\n//\r\n\r\n'use strict';\r\n\r\nvar Popover = (function() {\r\n\r\n\t// Variables\r\n\r\n\tvar $popover = $('[data-toggle=\"popover\"]');\r\n\r\n\r\n\t// Methods\r\n\r\n\tfunction init($this) {\r\n\t\tvar popoverClass = '';\r\n\r\n\t\tif ($this.data('color')) {\r\n\t\t\tpopoverClass = ' popover-' + $this.data('color');\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\ttrigger: 'focus',\r\n\t\t\ttemplate: '<div class=\"popover' + popoverClass + '\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>'\r\n\t\t};\r\n\r\n\t\t$this.popover(options);\r\n\t}\r\n\r\n\r\n\t// Events\r\n\r\n\tif ($popover.length) {\r\n\t\t$popover.each(function() {\r\n\t\t\tinit($(this));\r\n\t\t});\r\n\t}\r\n\r\n})();\r\n","//\r\n// Tooltip\r\n//\r\n\r\n'use strict';\r\n\r\nvar Tooltip = (function() {\r\n\r\n\t// Variables\r\n\r\n\tvar $tooltip = $('[data-toggle=\"tooltip\"]');\r\n\r\n\r\n\t// Methods\r\n\r\n\tfunction init() {\r\n\t\t$tooltip.tooltip();\r\n\t}\r\n\r\n\r\n\t// Events\r\n\r\n\tif ($tooltip.length) {\r\n\t\tinit();\r\n\t}\r\n\r\n})();\r\n","var CopyType = (function() {\r\n\r\n\t// Variables\r\n\r\n\tvar $element = '.btn-type-clipboard',\r\n\t\t$btn = $($element);\r\n\r\n\r\n\t// Methods\r\n\r\n\tfunction init($this) {\r\n\t\t$this.tooltip().on('mouseleave', function() {\r\n\t\t\t// Explicitly hide tooltip, since after clicking it remains\r\n\t\t\t// focused (as it's a button), so tooltip would otherwise\r\n\t\t\t// remain visible until focus is moved away\r\n\t\t\t$this.tooltip('hide');\r\n\t\t});\r\n\r\n\t\tvar clipboard = new ClipboardJS($element);\r\n\r\n\t\tclipboard.on('success', function(e) {\r\n\t\t\t$(e.trigger)\r\n\t\t\t\t.attr('title', 'Copied!')\r\n\t\t\t\t.tooltip('_fixTitle')\r\n\t\t\t\t.tooltip('show')\r\n\t\t\t\t.attr('title', 'Copy to clipboard')\r\n\t\t\t\t.tooltip('_fixTitle')\r\n\r\n\t\t\te.clearSelection()\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// Events\r\n\tif ($btn.length) {\r\n\t\tinit($btn);\r\n\t}\r\n\r\n})();\r\n","//\r\n// Forms\r\n//\r\n\r\n'use strict';\r\n\r\n\r\n//\r\n// Form control\r\n//\r\n\r\nvar FormControl = (function() {\r\n\r\n\t// Variables\r\n\r\n\tvar $input = $('.form-control'),\r\n\t\t$indeterminateCheckbox = $('[data-toggle=\"indeterminate\"]');\r\n\r\n\r\n\t// Methods\r\n\r\n\tfunction init($this) {\r\n\t\t$this.on('focus blur', function(e) {\r\n        \t$(this).parents('.form-group').toggleClass('focused', (e.type === 'focus'));\r\n    \t}).trigger('blur');\r\n\t}\r\n\r\n\r\n\t// Events\r\n\r\n\tif ($input.length) {\r\n\t\tinit($input);\r\n\t}\r\n\r\n\t// Add indeterminate state to a checkbox\r\n\tif($indeterminateCheckbox.length) {\r\n\t\t$indeterminateCheckbox.each(function() {\r\n\t\t\t$(this).prop('indeterminate', true)\r\n\t\t})\r\n\t}\r\n\r\n})();\r\n\r\n\r\n//\r\n// Custom input file\r\n//\r\n\r\nvar CustomInputFile = (function() {\r\n\r\n\t// Variables\r\n\r\n\tvar $customInputFile = $('.custom-input-file');\r\n\r\n\r\n\t// Methods\r\n\r\n\tfunction change($input, $this, $e) {\r\n\t\tvar fileName,\r\n\t\t\t$label = $input.next('label'),\r\n\t\t\tlabelVal = $label.html();\r\n\r\n\t\tif ($this && $this.files.length > 1) {\r\n\t\t\tfileName = ($this.getAttribute('data-multiple-caption') || '').replace('{count}', $this.files.length);\r\n\t\t}\r\n\t\telse if ($e.target.value) {\r\n\t\t\tfileName = $e.target.value.split('\\\\').pop();\r\n\t\t}\r\n\r\n\t\tif (fileName) {\r\n\t\t\t$label.find('span').html(fileName);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$label.html(labelVal);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction focus($input) {\r\n\t\t$input.addClass('has-focus');\r\n\t}\r\n\r\n\tfunction blur($input) {\r\n\t\t$input.removeClass('has-focus');\r\n\t}\r\n\r\n\r\n\t// Events\r\n\r\n\tif ($customInputFile.length) {\r\n\t\t$customInputFile.each(function() {\r\n\t\t\tvar $input = $(this);\r\n\r\n\t\t\t$input.on('change', function(e) {\r\n\t\t\t\tvar $this = this,\r\n\t\t\t\t\t$e = e;\r\n\r\n\t\t\t\tchange($input, $this, $e);\r\n\t        });\r\n\r\n\t        // Firefox bug fix\r\n\t        $input.on('focus', function() {\r\n\t            focus($input);\r\n\t        })\r\n\t        .on('blur', function() {\r\n\t            blur($input);\r\n\t        });\r\n\t\t});\r\n\t}\r\n})();\r\n","//\r\n// Sticky Navbar\r\n//\r\n\r\nvar NavbarSticky = (function() {\r\n\r\n\t// Variables\r\n\r\n\tvar $nav = $('.navbar-sticky'),\r\n        navOffsetTop = 0,\r\n\t\tscrolling = false;\r\n\r\n\r\n\t// Methods\r\n\r\n\tfunction init($this) {\r\n\r\n\t\t// our current vertical position from the top\r\n\t\tvar scrollTop = $(window).scrollTop(),\r\n\t\t\tnavHeight = $this.outerHeight();\r\n\r\n\t\tif (scrollTop > (navOffsetTop + 200)) {\r\n\t\t\t$this.addClass('sticky');\r\n\t\t\t$(\"body\").css(\"padding-top\", navHeight + \"px\");\r\n\t\t} else {\r\n\t\t\t$this.removeClass('sticky');\r\n\t\t\t$(\"body\").css(\"padding-top\", \"0\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Events\r\n\r\n\tif ($nav.length) {\r\n\r\n\t\tnavOffsetTop = $nav.offset().top;\r\n\t\t\r\n\t\t$(window).on({\r\n\t\t\t'scroll': function() {\r\n\t\t\t\tscrolling = true;\r\n\r\n\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\tif (scrolling) {\r\n\t\t\t\t\t\tscrolling = false;\r\n\r\n\t\t\t\t\t\t// Sticky navbar init\r\n                        init($nav);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 250);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})();\r\n","//\r\n// Highlight.js\r\n//\r\n\r\n'use strict';\r\n\r\nvar Highlight = (function() {\r\n\r\n\t//\r\n\t// Variables\r\n\t//\r\n\r\n\tvar $highlight = $('.highlight');\r\n\r\n\r\n\t//\r\n\t// Methods\r\n\t//\r\n\r\n\tfunction init(i, block) {\r\n\t\t// Insert the copy button inside the highlight block\r\n\t\tvar btnHtml = '<button class=\"action-item btn-clipboard\" title=\"Copy to clipboard\"><i data-feather=\"copy\"></i></button>'\r\n\t\t$(block).before(btnHtml)\r\n\t\t$('.btn-clipboard')\r\n\t\t\t.tooltip()\r\n\t\t\t.on('mouseleave', function() {\r\n\t\t\t\t// Explicitly hide tooltip, since after clicking it remains\r\n\t\t\t\t// focused (as it's a button), so tooltip would otherwise\r\n\t\t\t\t// remain visible until focus is moved away\r\n\t\t\t\t$(this).tooltip('hide');\r\n\t\t\t});\r\n\r\n\t\t// Component code copy/paste\r\n\t\tvar clipboard = new ClipboardJS('.btn-clipboard', {\r\n\t\t\ttarget: function(trigger) {\r\n\t\t\t\treturn trigger.nextElementSibling\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tclipboard.on('success', function(e) {\r\n\t\t\t$(e.trigger)\r\n\t\t\t\t.attr('title', 'Copied!')\r\n\t\t\t\t.tooltip('_fixTitle')\r\n\t\t\t\t.tooltip('show')\r\n\t\t\t\t.attr('title', 'Copy to clipboard')\r\n\t\t\t\t.tooltip('_fixTitle')\r\n\r\n\t\t\te.clearSelection()\r\n\t\t})\r\n\r\n\t\tclipboard.on('error', function(e) {\r\n\t\t\tvar modifierKey = /Mac/i.test(navigator.userAgent) ? '\\u2318' : 'Ctrl-'\r\n\t\t\tvar fallbackMsg = 'Press ' + modifierKey + 'C to copy'\r\n\r\n\t\t\t$(e.trigger)\r\n\t\t\t\t.attr('title', fallbackMsg)\r\n\t\t\t\t.tooltip('_fixTitle')\r\n\t\t\t\t.tooltip('show')\r\n\t\t\t\t.attr('title', 'Copy to clipboard')\r\n\t\t\t\t.tooltip('_fixTitle')\r\n\t\t})\r\n\r\n\t\t// Initialize highlight.js plugin\r\n\t\thljs.highlightBlock(block);\r\n\t}\r\n\r\n\r\n\t//\r\n\t// Events\r\n\t//\r\n\r\n\t$highlight.each(function(i, block) {\r\n\t\tinit(i, block);\r\n\t});\r\n\r\n})();\r\n"]}